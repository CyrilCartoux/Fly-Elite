import { Router } from '@angular/router';
import { AuthService } from './../auth/auth.service';
import { Flight } from './../interfaces/flight';
import { Injectable } from '@angular/core';
import * as firebase from 'firebase';
import { BehaviorSubject } from 'rxjs';
import { Users } from '../interfaces/user';

@Injectable({
  providedIn: 'root'
})
export class DataStorageService {

  flights: Flight[] = [];
  flightId;
  uid;

  allFlightsFromFirebaseSubject = new BehaviorSubject<Flight[]>(null);

  constructor(
    private authService: AuthService,
    private router: Router
  ) {
    this.authService.user.subscribe(
      data => {
        this.uid = data;
      }
    );
  }

  // get all the flights from firebse, stores them in the BehaviorSubject, used by the flight service on app load
  getFlights() {
    const query = firebase.database().ref('flights');
    query.on('value', (snapshot) => {
      this.allFlightsFromFirebaseSubject.next(Object.values(snapshot.val()));
    });
  }

  storeFlight(flight: Flight) {
    // get the unique id generated by firebase
    this.flightId = firebase.database().ref('users').child(this.uid).child('flights').push(flight);
    return this.flightId;
  }

  storeUsers(passengers: Users[], uid, flightUid) {
    passengers.forEach(passenger => {
      firebase.database()
        .ref('users')
        .child(uid)
        .child('flights')
        .child(flightUid.key)
        .push({
          email: passenger.email,
          nom: passenger.nom,
          prenom: passenger.prenom
        });
      console.log(passenger.nom + ' added');
    });
  }

  createFlight(form) {
    const departure = form.value.departureTime.toUTCString();
    const landing = form.value.landingTime.toUTCString();
    const datesVol = form.value.dates.toLocaleString();
    const idcreated = firebase.database().ref('flights').push({
      departure: form.value.departure,
      arrival: form.value.arrival,
      flightNumber: form.value.flightNumber,
      departureTime: departure,
      landingTime: landing,
      dates: datesVol,
      company: form.value.company,
      noEscales: form.value.noEscale
    });
  }

  getFlightId() {
    return this.flightId;
  }

  // getFlightsOfUser(userId) {
  //   console.log(this.uid);
  //   const userFlights = [];
  //   firebase.database().ref('users').child(this.uid).child('flights').on('value', (snapshot) => {
  //     console.log(snapshot.val());
  //     userFlights.push(snapshot.val());
  //   });
  //   return userFlights;
  // }


}

